/*
 * This file is generated by jOOQ.
 */
package com.kopivad.quizzes.domain.db;


import com.kopivad.quizzes.domain.db.tables.*;
import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import javax.annotation.processing.Generated;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ANSWERS_PK = Indexes0.ANSWERS_PK;
    public static final Index GROUPS_PK = Indexes0.GROUPS_PK;
    public static final Index QUESTIONS_PK = Indexes0.QUESTIONS_PK;
    public static final Index QUIZ_ANSWERS_PK = Indexes0.QUIZ_ANSWERS_PK;
    public static final Index QUIZ_HISTORY_PK = Indexes0.QUIZ_HISTORY_PK;
    public static final Index QUIZ_SESSIONS_PK = Indexes0.QUIZ_SESSIONS_PK;
    public static final Index TABLE_NAME_PK = Indexes0.TABLE_NAME_PK;
    public static final Index STEPS_PK = Indexes0.STEPS_PK;
    public static final Index USERS_EMAIL_UINDEX = Indexes0.USERS_EMAIL_UINDEX;
    public static final Index USERS_PK = Indexes0.USERS_PK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index ANSWERS_PK = Internal.createIndex("answers_pk", Answers.ANSWERS, new OrderField[] { Answers.ANSWERS.ID }, true);
        public static Index GROUPS_PK = Internal.createIndex("groups_pk", Groups.GROUPS, new OrderField[] { Groups.GROUPS.ID }, true);
        public static Index QUESTIONS_PK = Internal.createIndex("questions_pk", Questions.QUESTIONS, new OrderField[] { Questions.QUESTIONS.ID }, true);
        public static Index QUIZ_ANSWERS_PK = Internal.createIndex("quiz_answers_pk", QuizAnswers.QUIZ_ANSWERS, new OrderField[] { QuizAnswers.QUIZ_ANSWERS.ID }, true);
        public static Index QUIZ_HISTORY_PK = Internal.createIndex("quiz_history_pk", QuizHistories.QUIZ_HISTORIES, new OrderField[] { QuizHistories.QUIZ_HISTORIES.ID }, true);
        public static Index QUIZ_SESSIONS_PK = Internal.createIndex("quiz_sessions_pk", QuizSessions.QUIZ_SESSIONS, new OrderField[] { QuizSessions.QUIZ_SESSIONS.ID }, true);
        public static Index TABLE_NAME_PK = Internal.createIndex("table_name_pk", Quizzes.QUIZZES, new OrderField[] { Quizzes.QUIZZES.ID }, true);
        public static Index STEPS_PK = Internal.createIndex("steps_pk", Steps.STEPS, new OrderField[] { Steps.STEPS.ID }, true);
        public static Index USERS_EMAIL_UINDEX = Internal.createIndex("users_email_uindex", Users.USERS, new OrderField[] { Users.USERS.EMAIL }, true);
        public static Index USERS_PK = Internal.createIndex("users_pk", Users.USERS, new OrderField[] { Users.USERS.ID }, true);
    }
}
