/*
 * This file is generated by jOOQ.
 */
package com.kopivad.quizzes.domain.db.tables;


import com.kopivad.quizzes.domain.db.Keys;
import com.kopivad.quizzes.domain.db.Public;
import com.kopivad.quizzes.domain.db.tables.records.GroupsQuizzesRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupsQuizzes extends TableImpl<GroupsQuizzesRecord> {

    private static final long serialVersionUID = 1763458492;

    /**
     * The reference instance of <code>public.groups_quizzes</code>
     */
    public static final GroupsQuizzes GROUPS_QUIZZES = new GroupsQuizzes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupsQuizzesRecord> getRecordType() {
        return GroupsQuizzesRecord.class;
    }

    /**
     * The column <code>public.groups_quizzes.group_id</code>.
     */
    public final TableField<GroupsQuizzesRecord, Long> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.groups_quizzes.quiz_id</code>.
     */
    public final TableField<GroupsQuizzesRecord, Long> QUIZ_ID = createField(DSL.name("quiz_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.groups_quizzes</code> table reference
     */
    public GroupsQuizzes() {
        this(DSL.name("groups_quizzes"), null);
    }

    /**
     * Create an aliased <code>public.groups_quizzes</code> table reference
     */
    public GroupsQuizzes(String alias) {
        this(DSL.name(alias), GROUPS_QUIZZES);
    }

    /**
     * Create an aliased <code>public.groups_quizzes</code> table reference
     */
    public GroupsQuizzes(Name alias) {
        this(alias, GROUPS_QUIZZES);
    }

    private GroupsQuizzes(Name alias, Table<GroupsQuizzesRecord> aliased) {
        this(alias, aliased, null);
    }

    private GroupsQuizzes(Name alias, Table<GroupsQuizzesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GroupsQuizzes(Table<O> child, ForeignKey<O, GroupsQuizzesRecord> key) {
        super(child, key, GROUPS_QUIZZES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<GroupsQuizzesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GroupsQuizzesRecord, ?>>asList(Keys.GROUPS_QUIZZES__GROUPS_QUIZZES_GROUPS_ID_FK, Keys.GROUPS_QUIZZES__GROUPS_QUIZZES_QUIZZES_ID_FK);
    }

    public Groups groups() {
        return new Groups(this, Keys.GROUPS_QUIZZES__GROUPS_QUIZZES_GROUPS_ID_FK);
    }

    public Quizzes quizzes() {
        return new Quizzes(this, Keys.GROUPS_QUIZZES__GROUPS_QUIZZES_QUIZZES_ID_FK);
    }

    @Override
    public GroupsQuizzes as(String alias) {
        return new GroupsQuizzes(DSL.name(alias), this);
    }

    @Override
    public GroupsQuizzes as(Name alias) {
        return new GroupsQuizzes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupsQuizzes rename(String name) {
        return new GroupsQuizzes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupsQuizzes rename(Name name) {
        return new GroupsQuizzes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
