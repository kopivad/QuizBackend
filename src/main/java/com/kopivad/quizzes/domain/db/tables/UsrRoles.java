/*
 * This file is generated by jOOQ.
 */
package com.kopivad.quizzes.domain.db.tables;


import com.kopivad.quizzes.domain.db.Indexes;
import com.kopivad.quizzes.domain.db.Keys;
import com.kopivad.quizzes.domain.db.Public;
import com.kopivad.quizzes.domain.db.tables.records.UsrRolesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsrRoles extends TableImpl<UsrRolesRecord> {

    private static final long serialVersionUID = -1679747584;

    /**
     * The reference instance of <code>public.usr_roles</code>
     */
    public static final UsrRoles USR_ROLES = new UsrRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsrRolesRecord> getRecordType() {
        return UsrRolesRecord.class;
    }

    /**
     * The column <code>public.usr_roles.id</code>.
     */
    public final TableField<UsrRolesRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.usr_roles.user_id</code>.
     */
    public final TableField<UsrRolesRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.usr_roles.role</code>.
     */
    public final TableField<UsrRolesRecord, String> ROLE = createField(DSL.name("role"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>public.usr_roles</code> table reference
     */
    public UsrRoles() {
        this(DSL.name("usr_roles"), null);
    }

    /**
     * Create an aliased <code>public.usr_roles</code> table reference
     */
    public UsrRoles(String alias) {
        this(DSL.name(alias), USR_ROLES);
    }

    /**
     * Create an aliased <code>public.usr_roles</code> table reference
     */
    public UsrRoles(Name alias) {
        this(alias, USR_ROLES);
    }

    private UsrRoles(Name alias, Table<UsrRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UsrRoles(Name alias, Table<UsrRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UsrRoles(Table<O> child, ForeignKey<O, UsrRolesRecord> key) {
        super(child, key, USR_ROLES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USR_ROLES_PK);
    }

    @Override
    public UniqueKey<UsrRolesRecord> getPrimaryKey() {
        return Keys.USR_ROLES_PK;
    }

    @Override
    public List<UniqueKey<UsrRolesRecord>> getKeys() {
        return Arrays.<UniqueKey<UsrRolesRecord>>asList(Keys.USR_ROLES_PK);
    }

    @Override
    public List<ForeignKey<UsrRolesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UsrRolesRecord, ?>>asList(Keys.USR_ROLES__USR_ROLES_USR_ID_FK);
    }

    public Usr usr() {
        return new Usr(this, Keys.USR_ROLES__USR_ROLES_USR_ID_FK);
    }

    @Override
    public UsrRoles as(String alias) {
        return new UsrRoles(DSL.name(alias), this);
    }

    @Override
    public UsrRoles as(Name alias) {
        return new UsrRoles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UsrRoles rename(String name) {
        return new UsrRoles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UsrRoles rename(Name name) {
        return new UsrRoles(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
