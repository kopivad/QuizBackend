/*
 * This file is generated by jOOQ.
 */
package com.kopivad.quizzes.domain.db.tables.records;


import com.kopivad.quizzes.domain.db.tables.Answers;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswersRecord extends UpdatableRecordImpl<AnswersRecord> implements Record5<Long, Boolean, String, Long, String> {

    private static final long serialVersionUID = -918347859;

    /**
     * Setter for <code>public.answers.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.answers.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.answers.is_right</code>.
     */
    public void setIsRight(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.answers.is_right</code>.
     */
    public Boolean getIsRight() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.answers.text</code>.
     */
    public void setText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.answers.text</code>.
     */
    public String getText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.answers.question_id</code>.
     */
    public void setQuestionId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.answers.question_id</code>.
     */
    public Long getQuestionId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.answers.type</code>.
     */
    public void setType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.answers.type</code>.
     */
    public String getType() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Boolean, String, Long, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Boolean, String, Long, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Answers.ANSWERS.ID;
    }

    @Override
    public Field<Boolean> field2() {
        return Answers.ANSWERS.IS_RIGHT;
    }

    @Override
    public Field<String> field3() {
        return Answers.ANSWERS.TEXT;
    }

    @Override
    public Field<Long> field4() {
        return Answers.ANSWERS.QUESTION_ID;
    }

    @Override
    public Field<String> field5() {
        return Answers.ANSWERS.TYPE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Boolean component2() {
        return getIsRight();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public Long component4() {
        return getQuestionId();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Boolean value2() {
        return getIsRight();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public Long value4() {
        return getQuestionId();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public AnswersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AnswersRecord value2(Boolean value) {
        setIsRight(value);
        return this;
    }

    @Override
    public AnswersRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public AnswersRecord value4(Long value) {
        setQuestionId(value);
        return this;
    }

    @Override
    public AnswersRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public AnswersRecord values(Long value1, Boolean value2, String value3, Long value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnswersRecord
     */
    public AnswersRecord() {
        super(Answers.ANSWERS);
    }

    /**
     * Create a detached, initialised AnswersRecord
     */
    public AnswersRecord(Long id, Boolean isRight, String text, Long questionId, String type) {
        super(Answers.ANSWERS);

        set(0, id);
        set(1, isRight);
        set(2, text);
        set(3, questionId);
        set(4, type);
    }
}
