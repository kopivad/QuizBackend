/*
 * This file is generated by jOOQ.
 */
package com.kopivad.testingsystem.domain.db.tables.records;


import com.kopivad.testingsystem.domain.db.tables.QuizResults;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizResultsRecord extends UpdatableRecordImpl<QuizResultsRecord> implements Record6<Long, Long, Float, Long, Long, Long> {

    private static final long serialVersionUID = 2045397238;

    /**
     * Setter for <code>public.quiz_results.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.quiz_results.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.quiz_results.count_of_correct</code>.
     */
    public void setCountOfCorrect(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.quiz_results.count_of_correct</code>.
     */
    public Long getCountOfCorrect() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.quiz_results.rating</code>.
     */
    public void setRating(Float value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.quiz_results.rating</code>.
     */
    public Float getRating() {
        return (Float) get(2);
    }

    /**
     * Setter for <code>public.quiz_results.total_answers</code>.
     */
    public void setTotalAnswers(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.quiz_results.total_answers</code>.
     */
    public Long getTotalAnswers() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.quiz_results.session_id</code>.
     */
    public void setSessionId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.quiz_results.session_id</code>.
     */
    public Long getSessionId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.quiz_results.user_id</code>.
     */
    public void setUserId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.quiz_results.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Float, Long, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Float, Long, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return QuizResults.QUIZ_RESULTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return QuizResults.QUIZ_RESULTS.COUNT_OF_CORRECT;
    }

    @Override
    public Field<Float> field3() {
        return QuizResults.QUIZ_RESULTS.RATING;
    }

    @Override
    public Field<Long> field4() {
        return QuizResults.QUIZ_RESULTS.TOTAL_ANSWERS;
    }

    @Override
    public Field<Long> field5() {
        return QuizResults.QUIZ_RESULTS.SESSION_ID;
    }

    @Override
    public Field<Long> field6() {
        return QuizResults.QUIZ_RESULTS.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCountOfCorrect();
    }

    @Override
    public Float component3() {
        return getRating();
    }

    @Override
    public Long component4() {
        return getTotalAnswers();
    }

    @Override
    public Long component5() {
        return getSessionId();
    }

    @Override
    public Long component6() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCountOfCorrect();
    }

    @Override
    public Float value3() {
        return getRating();
    }

    @Override
    public Long value4() {
        return getTotalAnswers();
    }

    @Override
    public Long value5() {
        return getSessionId();
    }

    @Override
    public Long value6() {
        return getUserId();
    }

    @Override
    public QuizResultsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public QuizResultsRecord value2(Long value) {
        setCountOfCorrect(value);
        return this;
    }

    @Override
    public QuizResultsRecord value3(Float value) {
        setRating(value);
        return this;
    }

    @Override
    public QuizResultsRecord value4(Long value) {
        setTotalAnswers(value);
        return this;
    }

    @Override
    public QuizResultsRecord value5(Long value) {
        setSessionId(value);
        return this;
    }

    @Override
    public QuizResultsRecord value6(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public QuizResultsRecord values(Long value1, Long value2, Float value3, Long value4, Long value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizResultsRecord
     */
    public QuizResultsRecord() {
        super(QuizResults.QUIZ_RESULTS);
    }

    /**
     * Create a detached, initialised QuizResultsRecord
     */
    public QuizResultsRecord(Long id, Long countOfCorrect, Float rating, Long totalAnswers, Long sessionId, Long userId) {
        super(QuizResults.QUIZ_RESULTS);

        set(0, id);
        set(1, countOfCorrect);
        set(2, rating);
        set(3, totalAnswers);
        set(4, sessionId);
        set(5, userId);
    }
}
